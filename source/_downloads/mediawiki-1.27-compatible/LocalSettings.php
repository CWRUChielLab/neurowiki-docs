<?php
# This file was automatically generated by the MediaWiki 1.27.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "NeuroWiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";

## The protocol and server name to use in fully-qualified URLs
## Note: Leaving $wgServer undefined will allow it to be determined
## automatically, which is necessary when switching from port forwarding to
## bridged networking or when cloning the dev server
#$wgServer = "https://dynamicshjc.case.edu:8014";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgScriptPath/images/a/a0/Wiki-logo.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "neurowiki.case@gmail.com";
$wgPasswordSender = "neurowiki.case@gmail.com";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "wikidb";
$wgDBuser = "root";
$wgDBpassword = "<MySQL password>";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "<random string>";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "<random string>";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "https://creativecommons.org/licenses/by-nc-sa/4.0/";
$wgRightsText = "Creative Commons Attribution-NonCommercial-ShareAlike";
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by-nc-sa.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtensions('ExtensionName');
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'Cite' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'WikiEditor' );


# End of automatically generated settings.
# Add more configuration options below.


# Disable one form of caching so that newly uploaded files are immediately
# visible on pages
$wgParserCacheType = CACHE_NONE;

# Set default time zone for display
$wgDefaultUserOptions['timecorrection'] = 'ZoneInfo|-240|America/New_York';

# Enable short URLs
$wgUsePathInfo = true;
$wgArticlePath = "/wiki/$1";

# Favicon
$wgFavicon = "$wgScriptPath/images/7/77/Wiki-favicon.ico";

# Fix site customization on Special:Preferences page
$wgAllowSiteCSSOnRestrictedPages = true;

# Configure email sent from the wiki
$wgPasswordSenderName = $wgSitename;
$wgSMTP = array(
    'host'      => "smtp.gmail.com",
    'IDHost'    => "gmail.com",
    'port'      => 587,
    'auth'      => true,
    'username'  => "neurowiki.case",
    'password'  => "<gmail password>"
);

# Allow uploads of additional file types
$wgFileExtensions[] = "nb";
$wgFileExtensions[] = "cdf";
$wgFileExtensions[] = "m";
$wgFileExtensions[] = "wl";
$wgFileExtensions[] = "pdf";
$wgFileExtensions[] = "ico";  # for uploading the wiki favicon

# MediaWiki is suspicious of Import and Export commands in Mathematica
# notebooks, e.g., Chapter02.nb from BIOL 300. Disable script checks before
# uploading notebooks, then re-enable them for security purposes. Toggle between
# states by running
#   sudo disable-upload-script-checks
# which will change the value of this variable.
$wgDisableUploadScriptChecks = false;

# Some Mathematica notebooks with file sizes smaller than the PHP memory limit
# will still cause PHP to run out of memory when the notebooks are uploaded
# (perhaps data compressed in the notebook is being expanded?). A blank white
# page will appear when uploading the file. Enable PHP error reporting for
# debugging.
#error_reporting(E_ALL);
#ini_set('display_errors', 1);

# When all else fails, enable debugging details to track down issues with
# extensions, etc.  Useful when you get the MWException error.
#$wgShowExceptionDetails = true;