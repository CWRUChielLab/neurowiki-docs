<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.29.0-wmf.17</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>MediaWiki:Gadget-ReferenceTooltips</title>
    <ns>8</ns>
    <id>35323375</id>
    <revision>
      <id>707355629</id>
      <parentid>485567052</parentid>
      <timestamp>2016-02-28T10:53:17Z</timestamp>
      <contributor>
        <username>The Earwig</username>
        <id>7418060</id>
      </contributor>
      <comment>reword</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="144">[[mw:Reference Tooltips|Reference Tooltips]]: hover over inline citations to see reference information without moving away from the article text</text>
      <sha1>83ucy23f1ta8u8extt8n1yfgo9xqehz</sha1>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Gadget-ReferenceTooltips.css</title>
    <ns>8</ns>
    <id>35323396</id>
    <revision>
      <id>766133514</id>
      <parentid>766131053</parentid>
      <timestamp>2017-02-18T12:11:53Z</timestamp>
      <contributor>
        <username>Oshwah</username>
        <id>3174456</id>
      </contributor>
      <comment>Replacing with new location of image</comment>
      <model>css</model>
      <format>text/css</format>
      <text xml:space="preserve" bytes="2783">/* See [[mw:Reference Tooltips]] */
 
.referencetooltip {
        position: absolute;
        list-style: none;
        list-style-image: none;
        opacity: 0;
        font-size: 10px;
        margin: 0;
        z-index: 5;
        padding: 0;
}
.referencetooltip li {
        border: #080086 2px solid;
        max-width: 260px;
        padding: 10px 8px 13px 8px;
        margin: 0px;
        background-color: #F7F7F7;
        -webkit-box-shadow: 2px 4px 2px rgba(0,0,0,0.3);
        -moz-box-shadow: 2px 4px 2px rgba(0,0,0,0.3);
        box-shadow: 2px 4px 2px rgba(0,0,0,0.3);
}
.referencetooltip li+li {
        margin-left: 7px;
        margin-top: -2px;
        border: 0;
        padding: 0;
        height: 3px;
        width: 0px;
        background-color: transparent;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        box-shadow: none;
        border-top: 12px #080086 solid;
        border-right: 7px transparent solid;
        border-left: 7px transparent solid;
}
.referencetooltip&gt;li+li::after {
        content: '';
        border-top: 8px #F7F7F7 solid;
        border-right: 5px transparent solid;
        border-left: 5px transparent solid;
        margin-top: -12px;
        margin-left: -5px;
        z-index: 1;
        height: 0px;
        width: 0px;
        display: block;
}
.client-js body .referencetooltip li li {
        border: none;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        box-shadow: none;
        height: auto;
        width: auto;
        margin: auto;
        padding: 0;
        position: static;
}
.RTflipped {
        padding-top: 13px;
}
.referencetooltip.RTflipped li+li {
        position: absolute;
        top: 2px;
        border-top: 0;
        border-bottom: 12px #080086 solid;
}
.referencetooltip.RTflipped li+li::after {
        border-top: 0;
        border-bottom: 8px #F7F7F7 solid;
        position: absolute;
        margin-top: 7px;
}
.RTsettings {
        float: right;
        height: 24px;
        width: 24px;
        cursor: pointer;
        background-image: url(//upload.wikimedia.org/wikipedia/commons/thumb/0/05/OOjs_UI_icon_advanced.svg/24px-OOjs_UI_icon_advanced.svg.png);
        background-image: linear-gradient(transparent, transparent), url(//upload.wikimedia.org/wikipedia/commons/0/05/OOjs_UI_icon_advanced.svg);
        margin-top: -9px;
        margin-right: -7px;
        -webkit-transition: opacity 0.15s;
        -moz-transition: opacity 0.15s;
        -ms-transition: opacity 0.15s;
        -o-transition: opacity 0.15s;
        transition: opacity 0.15s;
        opacity: 0.6;
        filter: alpha(opacity=60);
}
.RTsettings:hover {
        opacity: 1;
        filter: alpha(opacity=100);
}
.RTTarget {
        border: #080086 2px solid;
}</text>
      <sha1>r5ad4wjgwatbhqjp1heoqrzvl294qfx</sha1>
    </revision>
  </page>
  <page>
    <title>MediaWiki:Gadget-ReferenceTooltips.js</title>
    <ns>8</ns>
    <id>35323386</id>
    <revision>
      <id>699932393</id>
      <parentid>699764370</parentid>
      <timestamp>2016-01-15T09:23:58Z</timestamp>
      <contributor>
        <username>MSGJ</username>
        <id>42630</id>
      </contributor>
      <comment>changes requested by [[User:Yair rand]], details on the talk page</comment>
      <model>javascript</model>
      <format>text/javascript</format>
      <text xml:space="preserve" bytes="10607">// See [[mw:Reference Tooltips]]
// Source https://en.wikipedia.org/wiki/MediaWiki:Gadget-ReferenceTooltips.js

window.pg || $(document).ready( function($) {

    // Make sure we are in article, project, or help namespace
    if ( true ) {
		mw.messages.set( {
			&quot;RT-enable&quot; : &quot;Enable Reference Tooltips&quot;,
			&quot;RT-disable&quot; : &quot;Disable Reference Tooltips&quot;,
			&quot;RT-disablenote&quot; : &quot;Once disabled, Reference Tooltips can be re-enabled using a link in the footer of the page.&quot;,
			&quot;RT-delay&quot; : &quot;Delay before the tooltip appears (in milliseconds): &quot;,
			&quot;RT-activationmethod&quot; : &quot;Tooltip is activated by:&quot;,
			&quot;RT-hovering&quot; : &quot;hovering&quot;,
			&quot;RT-clicking&quot; : &quot;clicking&quot;,
			&quot;RT-options&quot; : &quot;Reference Tooltips options&quot;,
			&quot;RT-options-save&quot; : &quot;Save settings&quot;,
			&quot;RT-settings&quot; :&quot;Tooltip settings&quot;
		} );
        function toggleRT(o){
            mw.loader.using(&quot;jquery.cookie&quot;,function(){
                    $.cookie(&quot;RTsettings&quot;,o+&quot;|&quot;+ settings[1] + &quot;|&quot; + settings[2], {path:&quot;/&quot;,expires:90});
                    location.reload();
            });
        }
        var settings = document.cookie.split(&quot;RTsettings=&quot;)[1];
        settings = settings ? settings.split(&quot;;&quot;)[0].split(&quot;%7C&quot;) : [1, 200, +(&quot;ontouchstart&quot; in document.documentElement)];
        if( settings[0] == 0 ) {
            var footer = $(&quot;#footer-places, #f-list&quot;);
            if( footer.length === 0 ) {
                    footer = $(&quot;#footer li&quot;).parent();
            }
            footer.append($(&quot;&lt;li&gt;&quot;).append(
            	$(&quot;&lt;a&gt;&quot;)
            		.text( mw.message( &quot;RT-enable&quot; ) )
            		.attr(&quot;href&quot;,&quot;javascript:(function(){})()&quot;)
            		.click(function(){toggleRT(1)})
            ));
            return;
        }
        var isTouchscreen = +settings[2],
            timerLength = isTouchscreen ? 0 : +settings[1],
            settingsMenu;
        $(&quot;.reference&quot;).each( function() {
            var tooltipNode, hideTimer, showTimer, checkFlip = false;
            function findRef( h ){
                    h = h.firstChild; h = h &amp;&amp; h.getAttribute &amp;&amp; h.getAttribute(&quot;href&quot;); h = h &amp;&amp; h.split(&quot;#&quot;); h = h &amp;&amp; h[1];
                    h = h &amp;&amp; document.getElementById( h );
                    h = h &amp;&amp; h.nodeName == &quot;LI&quot; &amp;&amp; h;
                    return h;
            }
            function hide( refLink ) {
                    if( tooltipNode &amp;&amp; tooltipNode.parentNode == document.body ) {
                            hideTimer = setTimeout( function() {
                                    $(tooltipNode).animate({opacity: 0}, 100, function(){ document.body.removeChild( tooltipNode ) });
                            }, isTouchscreen ? 16 : 100);
                    } else {
                            $( findRef( refLink ) ).removeClass(&quot;RTTarget&quot;);
                    }
            }
            function show(){
                    if( !tooltipNode.parentNode || tooltipNode.parentNode.nodeType === 11 ){
                            document.body.appendChild( tooltipNode );
                            checkFlip = true;
                    }
                    $(tooltipNode).stop().animate({opacity: 1}, 100);
                    clearTimeout( hideTimer );
            }
            function openSettingsMenu(){
                    if( settingsMenu ) {
                            settingsMenu.dialog( &quot;open&quot; );
                    } else {
                            settingsMenu = $(&quot;&lt;form&gt;&quot;)
                            	.append(
                                    $(&quot;&lt;button&gt;&quot;).css(&quot;width&quot;,&quot;100%&quot;).text( mw.msg( &quot;RT-disable&quot;, mw.user ) ).button().click(function(){toggleRT(0)}),
                                    $(&quot;&lt;br&gt;&quot;),
                                    $(&quot;&lt;small&gt;&quot;).text( mw.msg( &quot;RT-disablenote&quot;) ),
                                    $(&quot;&lt;hr&gt;&quot;),
                                    $(&quot;&lt;label&gt;&quot;).text( mw.msg( &quot;RT-delay&quot; ) ).append($(&quot;&lt;input&gt;&quot;).attr({&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:settings[1],step:50,min:0,max:5000})),
                                    $(&quot;&lt;br&gt;&quot;),
                                    $(&quot;&lt;span&gt;&quot;).text( mw.msg( &quot;RT-activationmethod&quot;, mw.user ) ),
                                    $(&quot;&lt;label&gt;&quot;).append(
                                            $(&quot;&lt;input&gt;&quot;).attr({&quot;type&quot;:&quot;radio&quot;, &quot;name&quot;:&quot;RTActivate&quot;, &quot;checked&quot;:settings[2]==0&amp;&amp;&quot;checked&quot;, &quot;disabled&quot;:&quot;ontouchstart&quot; in document.documentElement&amp;&amp;&quot;disabled&quot;}),
                                            mw.msg( &quot;RT-hovering&quot;, mw.user )
                                    ),
                                    $(&quot;&lt;label&gt;&quot;).append(
                                            $(&quot;&lt;input&gt;&quot;).attr({&quot;type&quot;:&quot;radio&quot;, &quot;name&quot;:&quot;RTActivate&quot;, &quot;checked&quot;:settings[2]==1&amp;&amp;&quot;checked&quot;}),
                                            mw.msg( &quot;RT-clicking&quot;, mw.user )
                                    )
                            	)
                            .submit(function(e){e.preventDefault()})
                            .dialog({
                            	modal:true,
                            	width:500,
                            	title: mw.msg( &quot;RT-options&quot; ),
                            	buttons:[ { text: mw.msg( &quot;RT-options-save&quot;, mw.user ), click: function(){
                                    var a = this.getElementsByTagName(&quot;input&quot;),
                                            b = +a[0].value;
                                    $.cookie(&quot;RTsettings&quot;,&quot;1|&quot;+ (b &gt; -1 &amp;&amp; b &lt; 5001 ? b : settings[1]) + (a[1].checked ? &quot;|0&quot; : &quot;|1&quot;), {path:&quot;/&quot;,expires:90});
                                    location.reload();
                            	}}]
                            });
                    }
            }
            $(this)[ isTouchscreen ? 'click' : 'hover' ](function( e ){
                    var _this = this;
                    if( isTouchscreen ) {
                            e.preventDefault();
                            (tooltipNode &amp;&amp; tooltipNode.parentNode == document.body) || setTimeout( function(){
                                    $( document.body ).on(&quot;click touchstart&quot;, function( e ) {
                                            e = e || event;
                                            e = e.target || e.srcElement;
                                            for( ; e &amp;&amp; !$( e ).hasClass( &quot;referencetooltip&quot; ) ; )
                                                    e = e.parentNode;
                                            if( !e ){
                                                    clearTimeout( showTimer );
                                                    hide( _this );
                                                    $(document.body).off(&quot;click touchstart&quot;, arguments.callee);
                                            }
                                    });
                            }, 0);
                    }
                    hideTimer &amp;&amp; clearTimeout( hideTimer );
                    showTimer &amp;&amp; clearTimeout( showTimer );
                    showTimer = setTimeout( function() {
                            var h = findRef( _this );
                            if( !h ){return}
                            var windowTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0,
                                    hOffsetTop = $( h ).offset().top;
                            if( !isTouchscreen &amp;&amp; windowTop &lt; hOffsetTop &amp;&amp; windowTop + $(window).height() &gt; hOffsetTop + h.offsetHeight ) {
                                    $( h ).addClass(&quot;RTTarget&quot;);
                                    return;
                            }
                            if(!tooltipNode){
                                    tooltipNode = document.createElement(&quot;ul&quot;);
                                    tooltipNode.className = &quot;referencetooltip&quot;;
                                    var c = tooltipNode.appendChild( $( h ).clone( true )[ 0 ] );
                                    try {
                                            if( c.firstChild.nodeName != &quot;A&quot; ) {
                                                    while( c.childNodes[1].nodeName == &quot;A&quot; &amp;&amp; c.childNodes[1].getAttribute( &quot;href&quot; ).indexOf(&quot;#cite_ref-&quot;) !== -1 ) {
                                                            do { c.removeChild( c.childNodes[1] ) } while ( c.childNodes[1].nodeValue == &quot; &quot; );
                                                    }
                                            }
                                    } catch (e) { mw.log(e) }
                                    c.removeChild( c.firstChild );
                                    $( tooltipNode.firstChild.insertBefore( document.createElement( &quot;span&quot; ), tooltipNode.firstChild.firstChild ) ).addClass(&quot;RTsettings&quot;).attr(&quot;title&quot;, mw.msg( &quot;RT-settings&quot; )).click(function(){
                                            mw.loader.using([&quot;jquery.cookie&quot;,&quot;jquery.ui.dialog&quot;], openSettingsMenu);
                                    });
                                    tooltipNode.appendChild( document.createElement( &quot;li&quot; ) );
                                    isTouchscreen || $(tooltipNode).hover(show, hide);
                            }
                            show();
                            var o = $(_this).offset(), oH = tooltipNode.offsetHeight;
                            $(tooltipNode).css({top: o.top - oH, left: o.left - 7 });
                            if( tooltipNode.offsetHeight &gt; oH ) { // is it squished against the right side of the page?
                                    $(tooltipNode).css({left:'auto',right:0});
                                    tooltipNode.lastChild.style.marginLeft = (o.left - tooltipNode.offsetLeft) + &quot;px&quot;;
                            }
                            if( checkFlip ) {
                                    if( o.top &lt; tooltipNode.offsetHeight + ( window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 ) ) { // is part of it above the top of the screen?
                                            $(tooltipNode).addClass(&quot;RTflipped&quot;).css({top: o.top + 12});
                                    } else if( tooltipNode.className === &quot;referencetooltip RTflipped&quot; ) { // cancel previous
                                            $(tooltipNode).removeClass(&quot;RTflipped&quot;);
                                    }
                                    checkFlip = false;
                            }
                    }, timerLength);
            }, isTouchscreen ? undefined : function(){clearTimeout(showTimer); hide(this); } );
 
        } );
        
    }

} );</text>
      <sha1>gj3olqva5ypxgnm2se2hvhu8eu6d6z4</sha1>
    </revision>
  </page>
</mediawiki>
