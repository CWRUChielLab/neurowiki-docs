#
#
# GLOBAL SETTINGS
#
#


# Globally specify ServerName to satisfy requirement, will be replaced by
# matching virtual host's ServerName

ServerName localhost


# Except where aliases are used, all URLs are relative to DocumentRoot, e.g.,
# https://example.com/dir1/page.html points to /var/www/html/dir1/page.html

DocumentRoot /var/www/html


# Deny access to everything on the server unless overridden by other Directory
# directives, and allow access to the DocumentRoot

<Directory ~ "/">
    Options -Indexes
    Require all denied
</Directory>

<Directory ~ "/var/www/html">
    Require all granted
</Directory>


# Disallow access to .git directories and .gitignore files

RedirectMatch 404 /\.git


# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
# error, crit, alert, emerg.
# It is also possible to configure the loglevel for particular
# modules, e.g.
#LogLevel info ssl:warn

ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined


#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
#	 Translate the client X.509 into a Basic Authorisation.  This means that
#	 the standard Auth/DBMAuth methods can be used for access control.  The
#	 user name is the `one line' version of the client's X.509 certificate.
#	 Note that no password is obtained from the user. Every entry in the user
#	 file needs this password: `xxj31ZMTZzkVA'.
#   o ExportCertData:
#	 This exports two additional environment variables: SSL_CLIENT_CERT and
#	 SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
#	 server (always existing) and the client (only existing when client
#	 authentication is used). This can be used to import the certificates
#	 into CGI scripts.
#   o StdEnvVars:
#	 This exports the standard SSL/TLS related `SSL_*' environment variables.
#	 Per default this exportation is switched off for performance reasons,
#	 because the extraction step is an expensive operation and is usually
#	 useless for serving static content. So one usually enables the
#	 exportation for CGI and SSI requests only.
#   o OptRenegotiate:
#	 This enables optimized SSL connection renegotiation handling when SSL
#	 directives are used in per-directory context.
#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
<FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
</FilesMatch>
<Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
</Directory>


#
#
# VIRTUAL HOSTS
#
# ServerName specifies what hostname must appear in the request's Host: header
# to match a virtual host
#
#


# Matches any http://* and redirects to https://*

<VirtualHost *:80>
    RewriteEngine On
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
</VirtualHost>


<IfModule mod_ssl.c>


# Matches only https://dynamicshjc.case.edu

<VirtualHost *:443>
    ServerName dynamicshjc.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/dynamicshjc/dynamicshjc_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/dynamicshjc/dynamicshjc_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/dynamicshjc/dynamicshjc_case_edu_interm.cer
</VirtualHost>


# Matches only https://neurowiki.case.edu

<VirtualHost *:443>
    ServerName neurowiki.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/neurowiki/neurowiki_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/neurowiki/neurowiki_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/neurowiki/neurowiki_case_edu_interm.cer
</VirtualHost>


# Matches only https://neurowikidev.case.edu

<VirtualHost *:443>
    ServerName neurowikidev.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/neurowikidev/neurowikidev_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/neurowikidev/neurowikidev_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/neurowikidev/neurowikidev_case_edu_interm.cer
</VirtualHost>


# Matches only https://biol300.case.edu

<VirtualHost *:443>
    ServerName biol300.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/biol300/biol300_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/biol300/biol300_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/biol300/biol300_case_edu_interm.cer
</VirtualHost>


# Matches only https://biol300dev.case.edu

<VirtualHost *:443>
    ServerName biol300dev.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/biol300dev/biol300dev_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/biol300dev/biol300dev_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/biol300dev/biol300dev_case_edu_interm.cer
</VirtualHost>


# Matches only https://slugwiki.case.edu

<VirtualHost *:443>
    ServerName slugwiki.case.edu
    SSLEngine on
    SSLCertificateFile      /media/sf_ssl-certificates/slugwiki/slugwiki_case_edu_cert.cer
    SSLCertificateKeyFile   /media/sf_ssl-certificates/slugwiki/slugwiki_case_edu.key
    SSLCertificateChainFile /media/sf_ssl-certificates/slugwiki/slugwiki_case_edu_interm.cer
</VirtualHost>


</IfModule>


# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
